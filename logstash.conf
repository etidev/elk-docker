input {
   udp {
      port => 5960
      codec => plain {
         charset => "UTF-8"
      }
      type => log4net
   }
}
filter {
   if [type] == "log4net" {
      grok {
         remove_field => message
         match => { message => "%{TIMESTAMP_ISO8601:sourceTimestamp} %{LOGLEVEL:loglevel} +- %{DATA:tempSite} - %{IPORHOST:tempHost} - %{DATA:tempApp} - %{DATA:tempUser} - %{DATA:tempDevice} - %{DATA:tempAgency} - %{DATA:tempUnit} - %{DATA:tempLAT} - %{GREEDYDATA:tempMessage}" }
      }
      if !("_grokparsefailure" in [tags]) {
         mutate {
            replace => [ "message" , "%{tempMessage}" ]
            replace => [ "host" , "%{tempHost}" ]
            add_field => { "Site" => "%{tempSite}" }
            add_field => { "Application" => "%{tempApp}" }
            add_field => { "User" => "%{tempUser}" }
            add_field => { "Device" => "%{tempDevice}" }
            add_field => { "Agency" => "%{tempAgency}" }
            add_field => { "Unit" => "%{tempUnit}" }
            add_field => { "LogAction" => "%{tempLAT}" }
         }
      }
      mutate {
         remove_field => [ "tempMessage" ]
         remove_field => [ "tempHost" ]
      }
   }
}
output {
   elasticsearch {
    embedded => ES_EMBEDDED
    host => ES_HOST
    port => ES_PORT
    protocol => "http"
  }
   stdout { codec => rubydebug }
   if [loglevel] == "ERROR-KILL" {
      email {
         options => {
            smtpIporHost => "smtp.gmail.com"
            port => "587"
            userName => "rick.adair@gmail.com"
            password => "Hg75ipsg!!!!"
            authenticationType => "plain"
            starttls => "true"
            }
         from => "<rick.adair@gmail.com>"
         subject => "%{Site} Production Error"
         to => "<rick.adair@gmail.com>"
         body => "The following Error occurred: %{message}"
         via => "smtp"
      }
   }
}